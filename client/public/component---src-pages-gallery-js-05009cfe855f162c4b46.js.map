{"version":3,"sources":["webpack:///./src/components/GalleryPage.module.scss","webpack:///./src/components/sub-pages-header.js","webpack:///./src/pages/gallery.js"],"names":["module","exports","Header","props","React","useState","isNavbarOpen","changeNavbar","inputEl","useRef","className","classNames","layoutStyles","navBar","navBarActive","headerWrapper","backgroundWrapperBack","backgroundWrapper","query","initDelay","transition","duration","images","image","style","maxHeight","width","backgroundRepeat","opacity","backgroundColor","backgroundPosition","zIndex","header","to","logo","ref","role","onClick","onKeyDown","tabIndex","burgerContainer","type","toggler","burger","buttonText","text","hideButton","paddingHeader","padding","Gallery","isModalOpen","changeModal","src","currentSrc","GalleryStyles","overlay","open","data","handleImage","e","console","log","target","container","overlay_inner","close","allContentfulGallery","edges","map","edge","idx","eventContainer","key","node","title","date","imagesGrid","gallery","i","file","url"],"mappings":"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","file":"component---src-pages-gallery-js-05009cfe855f162c4b46.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GalleryPage-module--container--YtZIZ\",\"imagesGrid\":\"GalleryPage-module--imagesGrid--3Fb-e\",\"header\":\"GalleryPage-module--header--1ltaL\",\"image\":\"GalleryPage-module--image--1BIfg\",\"eventContainer\":\"GalleryPage-module--eventContainer--3D4gc\",\"close\":\"GalleryPage-module--close--2G5he\",\"overlay\":\"GalleryPage-module--overlay--1dE6n\",\"open\":\"GalleryPage-module--open--2LV9_\",\"overlay_inner\":\"GalleryPage-module--overlay_inner--1aCXE\"};","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport layoutStyles from \"./layout.module.scss\"\nimport BackgroundSlider from \"gatsby-image-background-slider\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Image from \"./image\"\nimport classNames from \"classnames\"\nimport Content from \"./content\"\n\nconst Header = props => {\n  const [isNavbarOpen, changeNavbar] = React.useState(false)\n\n  const inputEl = React.useRef(null)\n\n  let className = classNames(layoutStyles.navBar, {\n    [layoutStyles.navBarActive]: isNavbarOpen,\n  })\n\n  return (\n    <div className={layoutStyles.headerWrapper}>\n      <div className={layoutStyles.backgroundWrapperBack} />\n\n      <div className={layoutStyles.backgroundWrapper} />\n      <BackgroundSlider\n        query={useStaticQuery(graphql`\n          query {\n            backgrounds: allFile(\n              filter: { sourceInstanceName: { eq: \"images\" } }\n            ) {\n              nodes {\n                relativePath\n                childImageSharp {\n                  fluid(maxWidth: 4000, quality: 100) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        `)}\n        initDelay={0} // delay before the first transition (if left at 0, the first image will be skipped initially)\n        transition={0} // transition duration between images\n        duration={0} // how long an image is shown\n        // specify images to include (and their order) according to `relativePath`\n        images={[props.image]}\n        // pass down standard element props\n        style={{\n          maxHeight: \"550px\",\n          width: \"100%\",\n          backgroundRepeat: \"no-repeat\",\n          opacity: 0.5,\n          backgroundColor: \"black\",\n          // backgroundSize: \"cover\",\n          // background: \"blue\",\n          backgroundPosition: \"top\",\n          // top: 0,\n          zIndex: -1,\n          // transform: \"rotate(-2deg) scale(.9)\",\n        }}\n      ></BackgroundSlider>\n      <nav className={layoutStyles.header}>\n        <Link to=\"/\">\n          <div className={layoutStyles.logo}>\n            <Image />\n          </div>\n        </Link>\n        <ul ref={inputEl} className={className}>\n          <li>\n            <Link to=\"/services\">Services</Link>\n          </li>\n          <li>\n            <Link to=\"/partners\">Partners</Link>\n          </li>\n          <li>\n            <Link to=\"/gallery\">Gallery</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"#\">Blog</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n        </ul>\n        <div\n          role=\"button\"\n          onClick={() => changeNavbar(!isNavbarOpen)}\n          onKeyDown={() => changeNavbar(!isNavbarOpen)}\n          tabIndex={0}\n          className={layoutStyles.burgerContainer}\n        >\n          <input type=\"checkbox\" className={layoutStyles.toggler} />\n          <div className={layoutStyles.burger}>\n            <div></div>\n          </div>\n        </div>\n      </nav>\n      <Content\n        buttonText={props.buttonText}\n        text={props.text}\n        hideButton={props.hideButton}\n        paddingHeader={props.padding}\n      />\n      {/* </BackgroundSlider> */}\n    </div>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport GalleryStyles from \"../components/GalleryPage.module.scss\"\nimport Header from \"../components/sub-pages-header\"\nimport Img from \"gatsby-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Footer from \"../components/Footer\"\nimport \"normalize.css\"\nimport classNames from \"classnames\"\nimport \"../styles/global.scss\"\n\nconst Gallery = props => {\n  const [isModalOpen, changeModal] = React.useState(false)\n  const [src, currentSrc] = React.useState(\"\")\n\n  let className = classNames(GalleryStyles.overlay, {\n    [GalleryStyles.open]: isModalOpen,\n  })\n\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulGallery(sort: { fields: date, order: DESC }) {\n        edges {\n          node {\n            title\n            date(formatString: \"MMMM Do, YYYY\")\n            gallery {\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const handleImage = e => {\n    console.log(e.target.src)\n    currentSrc(e.target.src)\n    changeModal(true)\n  }\n\n  return (\n    <>\n      <Header\n        image=\"gallery-bg.jpg\"\n        text={<span>GALLERY</span>}\n        hideButton={true}\n        padding={0}\n      />\n      <div>\n        <div className={GalleryStyles.container}>\n          <div className={className}>\n            <div className={GalleryStyles.overlay_inner}>\n              <button\n                className={GalleryStyles.close}\n                onClick={() => changeModal(false)}\n              >\n                X\n              </button>\n              <img src={src} />\n            </div>\n          </div>\n          {data.allContentfulGallery.edges.map((edge, idx) => {\n            return (\n              <div className={GalleryStyles.eventContainer} key={idx}>\n                <div className={GalleryStyles.header}>\n                  <h2>{edge.node.title}</h2>\n                  <span>{edge.node.date}</span>\n                </div>\n                <div className={GalleryStyles.imagesGrid}>\n                  {edge.node.gallery.map((i, idx) => (\n                    <img\n                      onClick={handleImage}\n                      className={GalleryStyles.image}\n                      key={idx}\n                      src={i.file.url}\n                    />\n                  ))}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default Gallery\n"],"sourceRoot":""}